@page "/sales/customers/create"
@using InventiCloud.Data
@using InventiCloud.Services.Interface
@using InventiCloud.Utils
@using Microsoft.EntityFrameworkCore
@using InventiCloud.Entities
@inject NavigationManager NavigationManager
@inject ICustomerService CustomerService
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]


<PageTitle>Create</PageTitle>

<MudContainer Class="pt-5" MaxWidth="MaxWidth.Medium">
    <div class="d-flex gap-4 align-items-center mb-4">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" aria-label="delete" Href="/sales/customers" />
        <MudText Typo="Typo.h4">CREATE CUSTOMER</MudText>
    </div>

    <EditForm method="post" Model="Customer" OnValidSubmit="AddCustomer" FormName="create" Enhance>
        <DataAnnotationsValidator />
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h6">CUSTOMER DETAILS</MudText>
                <MudTextField @bind-Value="Customer.CustomerName" Label="Name" For="@(() => Customer.CustomerName)" Variant="Variant.Outlined" />
                <MudTextField @bind-Value="Customer.Address" Label="Address" For="@(() => Customer.Address)" Variant="Variant.Outlined" />
                <MudTextField @bind-Value="Customer.PhoneNumber" Label="Contact Number" Mask="@(new PatternMask("00000000000"))" For="@(() => Customer.PhoneNumber)" Variant="Variant.Outlined" />
                <MudTextField @bind-Value="Customer.Email" Label="Email Address" For="@(() => Customer.Email)" Variant="Variant.Outlined" />
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudDatePicker Label="Birth Date" Editable="true" @bind-Date="Customer.BirthDate"
                               Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" For="@(() => Customer.BirthDate)" Placeholder="Birth Date" Variant="Variant.Outlined" />
            </MudItem>
            <MudItem xs="12" sm="6">
                <MudTextField @bind-Value="Customer.Occupation" Label="Occupation" For="@(() => Customer.Occupation)" Variant="Variant.Outlined" />
            </MudItem>
            <MudItem xs="12" Class="d-flex align-md-end">
                <MudButton Variant="Variant.Filled" Color="Color.Default" Class="ml-auto" Href="/sales/customers">CANCEL</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-2">CREATE CUSTOMER</MudButton>
            </MudItem>
        </MudGrid>
       
    </EditForm>
</MudContainer>

@code {
    [SupplyParameterFromForm]
    private Customer Customer { get; set; } = new();



    private async Task AddCustomer()
    {
        try
        {
            await CustomerService.AddCustomerAsync(Customer);
            Snackbar.Add($"{Customer.CustomerName} Added", Severity.Success);
            NavigationManager.NavigateTo("/sales/customers");

        }
        catch (InvalidOperationException ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }

    }

}
