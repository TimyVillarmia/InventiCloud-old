@page "/sales/orders/{ReferenceNumber}"
@using InventiCloud.Components.UI
@using InventiCloud.Services.Interface
@using InventiCloud.Entities
@inject ISalesOrderService SalesOrderService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer Class="pt-5" MaxWidth="MaxWidth.Large">

    <div class="d-flex align-items-center mb-4">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Href="/sales/orders" />
        <MudText Typo="Typo.h4">@ReferenceNumber</MudText>
    </div>

    @if (salesOrderDetails != null)
    {
        <MudText Typo="Typo.h6">DETAILS</MudText>
        <MudGrid>
            <MudItem xs="12" sm="6">
                <MudAutocomplete T="Customer" Label="Customer" Value="@salesOrderDetails.Customer" For="@(()=> salesOrderDetails.Customer)" ReadOnly="true"
                                 ToStringFunc="@(customer=> customer?.CustomerName)" Variant="Variant.Outlined" />
                <MudAutocomplete T="Branch" Label="Branch" Value="@salesOrderDetails.OrderBranch" For="@(() => salesOrderDetails.OrderBranch)" ReadOnly="true"
                                 ToStringFunc="@(branch=> branch?.BranchName)" Variant="Variant.Outlined" />
            </MudItem>

            <MudItem xs="12" sm="6">
                <MudAutocomplete T="SalesPerson" Label="Sales Person" Value="@salesOrderDetails.SalesPerson" For="@(() => salesOrderDetails.SalesPerson)" ReadOnly="true"
                                 ToStringFunc="@(salesperson=> salesperson?.FullName)" Variant="Variant.Outlined" />
                <MudDatePicker Label="Order Date" Date="@salesOrderDetails.OrderedDate" For="@(() => salesOrderDetails.OrderedDate)" ReadOnly="true"
                               Mask="@(new DateMask("MM/dd/yyyy"))" DateFormat="MM/dd/yyyy" Placeholder="Order Date" Variant="Variant.Outlined" />
            </MudItem>
        </MudGrid>

        <MudText Typo="Typo.h6">PRODUCTS</MudText>
        <MudDataGrid Items="@salesOrderDetails.SalesOrderItems" Class="mt-4" ReadOnly="true">
            <Columns>
                <PropertyColumn Property="soi => soi.Product.ProductName" Title="Product" />
                <PropertyColumn Property="soi => soi.Discount" Title="Discount " Format="P2" />
                <PropertyColumn Property="soi => soi.Quantity" Title="Quantity" />
                <PropertyColumn Property="soi => soi.UnitPrice" Title="Price" Format="C" />
                <PropertyColumn Property="soi => soi.SubTotal" Title="Subtotal" Format="C" />
            </Columns>
        </MudDataGrid>
        <MudText Typo="Typo.h5" Class="mt-2">Total: @salesOrderDetails.TotalAmount.ToString("C")</MudText>


    }
    else
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Class="my-4" />
    }

</MudContainer>

@code {
    [Parameter]
    public string ReferenceNumber { get; set; }

    private SalesOrder? salesOrderDetails;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(ReferenceNumber))
        {
            salesOrderDetails = await SalesOrderService.GetSalesOrderByReferenceNumberAsync(ReferenceNumber);

            if (salesOrderDetails == null)
            {
                Snackbar.Add($"Sales order with reference '{ReferenceNumber}' not found.", Severity.Error);
                NavigationManager.NavigateTo("/sales/orders", true);
            }
        }
        else
        {
            Snackbar.Add("Invalid sales order reference.", Severity.Error);
            NavigationManager.NavigateTo("/sales/orders", true);
        }
    }
}