@page "/purchase/orders"
@using InventiCloud.Components.UI
@using InventiCloud.Services
@using InventiCloud.Services.Interface
@using Microsoft.EntityFrameworkCore
@using InventiCloud.Entities
@using InventiCloud.Data
@inject IDbContextFactory<InventiCloud.Data.ApplicationDbContext> DbFactory
@inject IDialogService DialogService
@inject IPurchaseOrderService PurchaseOrderService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<PageTitle>Index</PageTitle>

<MudText Class="bold mb-2" Typo="Typo.h4">Purchase Orders </MudText>

<MudPaper Height="500px" Class="justify-center align-content-center">
    <MudText Class="bol" Typo="Typo.h6" Align="Align.Center">Add Purchase Orders</MudText>
    <MudText Typo="Typo.body1" Align="Align.Center">
        Your supplier catalog is currently empty. Click the "ADD PURCHASE ORDERS" button to get started.
    </MudText>
    <MudContainer Class="d-flex justify-center mt-2">
        <MudButton Variant="Variant.Filled" Href="/purchase/orders/create" Color="Color.Primary" Class="text-uppercase">
            Add Purchase Orders
        </MudButton>
    </MudContainer>
</MudPaper>

@code {
   

    // async Task OpenDialogAsync(PurchaseOrder purchaseorder)
    // {
    //     var parameters = new DialogParameters<DialogComponent>
    //     {
    //         {x => x.ContentText, $"Are you sure you want to delete the Purchase Order '{purchaseorder.PurchaseOrderId}'? This action cannot be undone."}
    //     };
         
    //     var dialog = await DialogService.ShowAsync<DialogComponent>("Delete Purchase Order", parameters);
    //     var result = await dialog.Result;

    //     if (!result.Canceled)
    //     {
    //         try
    //         {
    //             await PurchaseOrderService.DeletePurchaseOrder(purchaseorder);
    //             Snackbar.Add("Purchase Order Deleted", Severity.Success);
    //             await dataGrid.ReloadServerData();

    //         }
    //         catch (InvalidOperationException ex)
    //         {
    //             Snackbar.Add(ex.Message, Severity.Error);
    //         }
    //         catch (Exception ex)
    //         {
    //             Snackbar.Add("An error occurred while deleting the Purchase Order.", Severity.Error);
    //         }
    //     }

    // }

}
